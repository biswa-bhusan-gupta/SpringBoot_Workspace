// Response Controller
public class ResponseHandler {
     public static ResponseEntity<Object> generateResponse(String message, HttpStatus status, Object object) {
		ResponseMessageWrapper response = new ResponseMessageWrapper(object, message, status);
		return new ResponseEntity<Object>(response, status);
	 }
     }
// REST API CONTROLLER
return ResponseHandler.generateResponse("No User Groups found", HttpStatus.NOT_FOUND, object);


// RESPONSE HANDLER
import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import com.optum.basics.administrationutility.entity.Group;
import com.optum.basics.administrationutility.exception.ResponseMessageWrapper;

public class ResponseHandler {

	public static ResponseEntity<ResponseMessageWrapper> generateListResponse(String message, int status, List<Group> groups) {
		ResponseMessageWrapper response = new ResponseMessageWrapper(groups, message, status);
        return new ResponseEntity<ResponseMessageWrapper>(response,ResponseHandler.getResponseStatus(status));
	}

	public static ResponseEntity<ResponseMessageWrapper> generateResponse(String message, int status, Group group) {
		ResponseMessageWrapper response = new ResponseMessageWrapper(group, message, status);
        return new ResponseEntity<ResponseMessageWrapper>(response,ResponseHandler.getResponseStatus(status));
	}

	public static HttpStatus getResponseStatus(int status) {

		if (status == 200) {
			return HttpStatus.OK;
		} else if (status == 201) {
			return HttpStatus.CREATED;
		} else if (status == 206) {
			return HttpStatus.PARTIAL_CONTENT;
		} else if (status == 400) {
			return HttpStatus.BAD_REQUEST;
		} else if (status == 404) {
			return HttpStatus.NOT_FOUND;
		} else {
			return HttpStatus.INTERNAL_SERVER_ERROR;
		}

	}

}

// RESPONSE MESSAGE WRAPPER
package com.optum.basics.administrationutility.exception;

import java.util.Arrays;
import java.util.List;
import org.springframework.http.HttpStatus;
import com.optum.basics.administrationutility.entity.Group;

import oracle.sql.ARRAY;

public class ResponseMessageWrapper {

	private List<Group> groups;
	private String message;
	private int status;

	public ResponseMessageWrapper(List<Group> groups, String message1, int status1) {
		super();
		this.groups = groups;
		this.message = message1;
		this.status = status1;
	}

	public ResponseMessageWrapper(Group group, String message2, int status2) {
		super();
		groups = Arrays.asList(group);
		this.message = message2;
		this.status = status2;
	}

	public List<Group> getGroup() {
		return groups;
	}

	public void setGroup(List<Group> groups) {
		this.groups = groups;
	}

	public String getMessage() {
		return message;
	}

	public void setMessage(String message) {
		this.message = message;
	}

	public int getStatus() {
		return status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

}

// REST API CONTROLLER
	@GetMapping("/Groups")
	public ResponseEntity<ResponseMessageWrapper> getGroups() {
		List<Group> groups = this.groupService.getGroups();
		if (groups.size() > 0) {
			return ResponseHandler.generateListResponse("User Groups Found", HttpStatus.OK.value(), groups);
		} else {
			return ResponseHandler.generateListResponse("No User Groups found", HttpStatus.NOT_FOUND.value(), null);
		}
	}

	@GetMapping("/Groups/{id}")
	public ResponseEntity<ResponseMessageWrapper> getGroup(@PathVariable("id") int grpId) {
		Group group = this.groupService.getGroupById(grpId);
		if (group != null) {
			return ResponseHandler.generateResponse("User Group exists", HttpStatus.OK.value(), group);
		} else {
			return ResponseHandler.generateResponse("User Group doesn't exist", HttpStatus.NOT_FOUND.value(), null);
		}
	}
  
